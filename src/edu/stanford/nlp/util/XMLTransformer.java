package edu.stanford.nlp.util;

import javax.xml.transform.TransformerFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.stream.StreamSource;
import javax.xml.transform.stream.StreamResult;
import java.io.File;
import java.util.Properties;

/**
 * A class capable of transforming XML using an XSLT file.
 *
 * @author grenager
 */
public class XMLTransformer {

  private XMLTransformer() {
  }


  /**
   * Utility method for applying an XSLT file ("xsltFile") to an XML "inputFile"
   * and writing the results to "outputFile."
   */
  /*
   * The code for this method was taken and modified from
   * "http://java.sun.com/xml/jaxp/dist/1.1/docs/tutorial/xslt/4_transform.html"
   */
  public static void transformXML(File inputFile, File xsltFile, File outputFile) {
    try {
// Use a Transformer for output
      TransformerFactory tFactory =
              TransformerFactory.newInstance();
      StreamSource stylesource = new StreamSource(xsltFile);
      Transformer transformer = tFactory.newTransformer(stylesource);

      StreamSource source = new StreamSource(inputFile);
      StreamResult result = new StreamResult(outputFile);
//StreamResult result = new StreamResult(System.out);
      transformer.transform(source, result);

    } catch (TransformerConfigurationException tce) {
// Error generated by the parser
      System.out.println("\n** Transformer Factory error");
      System.out.println("   " + tce.getMessage());

// Use the contained exception, if any
      Throwable x = tce;
      if (tce.getException() != null)
        x = tce.getException();
      x.printStackTrace();

    } catch (TransformerException te) {
// Error generated by the parser
      System.out.println("\n** Transformation error");
      System.out.println("   " + te.getMessage());

// Use the contained exception, if any
      Throwable x = te;
      if (te.getException() != null)
        x = te.getException();
      x.printStackTrace();

    }
  }

  /*
   * Current implementation performs the given XSLT transform file on the given input file
   * and outputs to the given output file.
   */
  public static void main(String[] args) {
    Properties p = StringUtils.argsToProperties(args);
    String input = (String) p.get("in");
    String transform = (String) p.get("transform");
    String output = (String) p.get("out");
    if (input == null || transform == null || output == null) {
      System.err.println("Usage: java edu.stanford.nlp.util.XMLTransformer\n"
                         + "\t-in <inputFile> -transform <xsltFile> -out <outputFile>");
      return;
    }

    System.err.print("Transforming \"" + input + "\" to \"" + output + "\" using \"" + transform + "\"...");
    transformXML(new File(input), new File(transform), new File(output));
    System.err.println("done.");
  }


}
