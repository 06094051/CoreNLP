
# Pipeline options
annotators = pos, lemma, parse
pos.model = /u/nlp/data/pos-tagger/wsj3t0-18-bidirectional/bidirectional-distsim-wsj-0-18.tagger
ner.model.3class = /u/nlp/data/ner/goodClassifiers/all.3class.distsim.crf.ser.gz
ner.model.7class = /u/nlp/data/ner/goodClassifiers/muc.distsim.crf.ser.gz
ner.model.MISCclass = /u/nlp/data/ner/goodClassifiers/conll.distsim.crf.ser.gz
parser.model = /u/nlp/data/lexparser/englishPCFG.ser.gz
parser.maxlen = 100

# MachineReading properties
datasetReaderClass = edu.stanford.nlp.ie.machinereading.domains.bionlp.BioNLP09Reader

# training
trainPath = /u/nlp7/data/bioNLP09/bionlp09_shared_task_training_data_rev2
# note: assumes that a tmp/ directory exists relative to the execution path
serializedTrainingSentencesPath = tmp/bionlp_train_sentences.ser

# testing
testPath = /u/nlp7/data/bioNLP09/bionlp09_shared_task_test_data_without_gold_annotation
serializedTestSentencesPath = tmp/bionlp_test_sentences.ser

# where to store the models
# note: assumes that a tmp/ directory exists relative to the execution path
serializedEntityExtractorPath = tmp/bionlp_entity_model.ser
serializedRelationExtractorPath = tmp/bionlp_relation_model.ser

# what entity tagger to use
entityClassifier = edu.stanford.nlp.ie.machinereading.domains.bionlp.BioNLPEntityExtractor

# printers
entityResultsPrinters = edu.stanford.nlp.ie.machinereading.domains.bionlp.BioNLPEntityExtractorResultsPrinter
relationResultsPrinters = edu.stanford.nlp.ie.machinereading.RelationExtractorResultsPrinter

# features for relation extraction
# The set chosen by feature selection using RothCONLL04
# relationFeatures = arg_words,arg_type,dependency_path_lowlevel,dependency_path_words,surface_path_POS,entities_between_args,full_tree_path
# The above features plus the features used in Bjorne BioNLP09
relationFeatures = arg_words,arg_type,dependency_path_lowlevel,dependency_path_words,surface_path_POS,entities_between_args,full_tree_path,dependency_path_POS_unigrams,dependency_path_word_n_grams,dependency_path_POS_n_grams,dependency_path_edge_lowlevel_n_grams,dependency_path_edge-node-edge-grams_lowlevel,dependency_path_node-edge-node-grams_lowlevel,dependency_path_directed_bigrams,dependency_path_edge_unigrams,same_head,entity_counts

# uncomment to load a serialized model instead of training
# loadModel = true

# uncomment to disable evaluation
# trainOnly = true

extractEntities = true
# TODO: enable these when working!
extractRelations = false
extractEvents = false