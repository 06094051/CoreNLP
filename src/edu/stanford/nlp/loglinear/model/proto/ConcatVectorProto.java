// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConcatVector.proto

package edu.stanford.nlp.loglinear.model.proto;

public final class ConcatVectorProto {
  private ConcatVectorProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ConcatVectorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;
    java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> 
        getComponentList();
    edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index);
    int getComponentCount();
    java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
        getComponentOrBuilderList();
    edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
        int index);
  }
  public static final class ConcatVector extends
      com.google.protobuf.GeneratedMessage
      implements ConcatVectorOrBuilder {
    // Use ConcatVector.newBuilder() to construct.
    private ConcatVector(Builder builder) {
      super(builder);
    }
    private ConcatVector(boolean noInit) {}
    
    private static final ConcatVector defaultInstance;
    public static ConcatVector getDefaultInstance() {
      return defaultInstance;
    }
    
    public ConcatVector getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable;
    }
    
    public interface ComponentOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required bool sparse = 1;
      boolean hasSparse();
      boolean getSparse();
      
      // repeated double data = 2;
      java.util.List<java.lang.Double> getDataList();
      int getDataCount();
      double getData(int index);
    }
    public static final class Component extends
        com.google.protobuf.GeneratedMessage
        implements ComponentOrBuilder {
      // Use Component.newBuilder() to construct.
      private Component(Builder builder) {
        super(builder);
      }
      private Component(boolean noInit) {}
      
      private static final Component defaultInstance;
      public static Component getDefaultInstance() {
        return defaultInstance;
      }
      
      public Component getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required bool sparse = 1;
      public static final int SPARSE_FIELD_NUMBER = 1;
      private boolean sparse_;
      public boolean hasSparse() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getSparse() {
        return sparse_;
      }
      
      // repeated double data = 2;
      public static final int DATA_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> data_;
      public java.util.List<java.lang.Double>
          getDataList() {
        return data_;
      }
      public int getDataCount() {
        return data_.size();
      }
      public double getData(int index) {
        return data_.get(index);
      }
      
      private void initFields() {
        sparse_ = false;
        data_ = java.util.Collections.emptyList();;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasSparse()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, sparse_);
        }
        for (int i = 0; i < data_.size(); i++) {
          output.writeDouble(2, data_.get(i));
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, sparse_);
        }
        {
          int dataSize = 0;
          dataSize = 8 * getDataList().size();
          size += dataSize;
          size += 1 * getDataList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable;
        }
        
        // Construct using edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          sparse_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          data_ = java.util.Collections.emptyList();;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDescriptor();
        }
        
        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getDefaultInstanceForType() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance();
        }
        
        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component build() {
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component buildPartial() {
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component result = new edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sparse_ = sparse_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component) {
            return mergeFrom((edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component other) {
          if (other == edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance()) return this;
          if (other.hasSparse()) {
            setSparse(other.getSparse());
          }
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasSparse()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                sparse_ = input.readBool();
                break;
              }
              case 17: {
                ensureDataIsMutable();
                data_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                while (input.getBytesUntilLimit() > 0) {
                  addData(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required bool sparse = 1;
        private boolean sparse_ ;
        public boolean hasSparse() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public boolean getSparse() {
          return sparse_;
        }
        public Builder setSparse(boolean value) {
          bitField0_ |= 0x00000001;
          sparse_ = value;
          onChanged();
          return this;
        }
        public Builder clearSparse() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sparse_ = false;
          onChanged();
          return this;
        }
        
        // repeated double data = 2;
        private java.util.List<java.lang.Double> data_ = java.util.Collections.emptyList();;
        private void ensureDataIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = new java.util.ArrayList<java.lang.Double>(data_);
            bitField0_ |= 0x00000002;
           }
        }
        public java.util.List<java.lang.Double>
            getDataList() {
          return java.util.Collections.unmodifiableList(data_);
        }
        public int getDataCount() {
          return data_.size();
        }
        public double getData(int index) {
          return data_.get(index);
        }
        public Builder setData(
            int index, double value) {
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
          return this;
        }
        public Builder addData(double value) {
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
          return this;
        }
        public Builder addAllData(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureDataIsMutable();
          super.addAll(values, data_);
          onChanged();
          return this;
        }
        public Builder clearData() {
          data_ = java.util.Collections.emptyList();;
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
      }
      
      static {
        defaultInstance = new Component(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
    }
    
    // repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;
    public static final int COMPONENT_FIELD_NUMBER = 1;
    private java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> component_;
    public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> getComponentList() {
      return component_;
    }
    public java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
        getComponentOrBuilderList() {
      return component_;
    }
    public int getComponentCount() {
      return component_.size();
    }
    public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index) {
      return component_.get(index);
    }
    public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
        int index) {
      return component_.get(index);
    }
    
    private void initFields() {
      component_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getComponentCount(); i++) {
        if (!getComponent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < component_.size(); i++) {
        output.writeMessage(1, component_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < component_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, component_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable;
      }
      
      // Construct using edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getComponentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (componentBuilder_ == null) {
          component_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          componentBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.getDescriptor();
      }
      
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector getDefaultInstanceForType() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.getDefaultInstance();
      }
      
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector build() {
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector buildPartial() {
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector result = new edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector(this);
        int from_bitField0_ = bitField0_;
        if (componentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            component_ = java.util.Collections.unmodifiableList(component_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.component_ = component_;
        } else {
          result.component_ = componentBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector) {
          return mergeFrom((edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector other) {
        if (other == edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.getDefaultInstance()) return this;
        if (componentBuilder_ == null) {
          if (!other.component_.isEmpty()) {
            if (component_.isEmpty()) {
              component_ = other.component_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureComponentIsMutable();
              component_.addAll(other.component_);
            }
            onChanged();
          }
        } else {
          if (!other.component_.isEmpty()) {
            if (componentBuilder_.isEmpty()) {
              componentBuilder_.dispose();
              componentBuilder_ = null;
              component_ = other.component_;
              bitField0_ = (bitField0_ & ~0x00000001);
              componentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getComponentFieldBuilder() : null;
            } else {
              componentBuilder_.addAllMessages(other.component_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getComponentCount(); i++) {
          if (!getComponent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder subBuilder = edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addComponent(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;
      private java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> component_ =
        java.util.Collections.emptyList();
      private void ensureComponentIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          component_ = new java.util.ArrayList<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component>(component_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> componentBuilder_;
      
      public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> getComponentList() {
        if (componentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(component_);
        } else {
          return componentBuilder_.getMessageList();
        }
      }
      public int getComponentCount() {
        if (componentBuilder_ == null) {
          return component_.size();
        } else {
          return componentBuilder_.getCount();
        }
      }
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index) {
        if (componentBuilder_ == null) {
          return component_.get(index);
        } else {
          return componentBuilder_.getMessage(index);
        }
      }
      public Builder setComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.set(index, value);
          onChanged();
        } else {
          componentBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.set(index, builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addComponent(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.add(value);
          onChanged();
        } else {
          componentBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.add(index, value);
          onChanged();
        } else {
          componentBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addComponent(
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.add(builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.add(index, builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllComponent(
          java.lang.Iterable<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> values) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          super.addAll(values, component_);
          onChanged();
        } else {
          componentBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearComponent() {
        if (componentBuilder_ == null) {
          component_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          componentBuilder_.clear();
        }
        return this;
      }
      public Builder removeComponent(int index) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.remove(index);
          onChanged();
        } else {
          componentBuilder_.remove(index);
        }
        return this;
      }
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder getComponentBuilder(
          int index) {
        return getComponentFieldBuilder().getBuilder(index);
      }
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
          int index) {
        if (componentBuilder_ == null) {
          return component_.get(index);  } else {
          return componentBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
           getComponentOrBuilderList() {
        if (componentBuilder_ != null) {
          return componentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(component_);
        }
      }
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder addComponentBuilder() {
        return getComponentFieldBuilder().addBuilder(
            edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance());
      }
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder addComponentBuilder(
          int index) {
        return getComponentFieldBuilder().addBuilder(
            index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance());
      }
      public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder> 
           getComponentBuilderList() {
        return getComponentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
          getComponentFieldBuilder() {
        if (componentBuilder_ == null) {
          componentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder>(
                  component_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          component_ = null;
        }
        return componentBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
    }
    
    static {
      defaultInstance = new ConcatVector(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ConcatVector.proto\022&edu.stanford.nlp.l" +
      "oglinear.model.proto\"\214\001\n\014ConcatVector\022Q\n" +
      "\tcomponent\030\001 \003(\0132>.edu.stanford.nlp.logl" +
      "inear.model.proto.ConcatVector.Component" +
      "\032)\n\tComponent\022\016\n\006sparse\030\001 \002(\010\022\014\n\004data\030\002 " +
      "\003(\001B;\n&edu.stanford.nlp.loglinear.model." +
      "protoB\021ConcatVectorProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor,
              new java.lang.String[] { "Component", },
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.class,
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Builder.class);
          internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor =
            internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor.getNestedTypes().get(0);
          internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor,
              new java.lang.String[] { "Sparse", "Data", },
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.class,
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
