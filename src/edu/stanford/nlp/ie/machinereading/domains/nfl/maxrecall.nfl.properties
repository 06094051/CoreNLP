
# Pipeline options
annotators = pos, lemma, ner, parse
#pos.model = /u/nlp/data/pos-tagger/wsj3t0-18-bidirectional/bidirectional-distsim-wsj-0-18.tagger
#ner.model.3class = /u/nlp/data/ner/goodClassifiers/all.3class.distsim.crf.ser.gz
#ner.model.7class = /u/nlp/data/ner/goodClassifiers/muc.distsim.crf.ser.gz
#ner.model.MISCclass = /u/nlp/data/ner/goodClassifiers/conll.distsim.crf.ser.gz
#parser.model = /u/nlp/data/lexparser/englishPCFG.ser.gz
parser.maxlen = 100

# MachineReading properties
datasetReaderClass = edu.stanford.nlp.ie.machinereading.domains.nfl.NFLReader

# training (latest NFL corpus)
trainPath = /scr/nlp/data/machine-reading/Machine_Reading_P1_NFL_Scoring_Training_Data_V1.2/data/SportsDomain/NFL_Scoring/rel_xml
serializedTrainingSentencesPath = /scr/mihais/code/javanlp/tmp_maxrecall/nfl_training_sentences.ser

crossValidate = true
kfold = 10

# gazetteer of NFL teams
entityGazetteerPath = /scr/nlp/data/machine-reading/Machine_Reading_P1_Reading_Task_V2.0/data/SportsDomain/NFLScoring_UseCase/NFLgazetteer.txt

# what entity tagger to use
#entityClassifier = edu.stanford.nlp.ie.machinereading.domains.nfl.NFLEntityExtractor
entityClassifier = edu.stanford.nlp.ie.machinereading.domains.nfl.NFLMaxRecallEntityExtractor

# where to store the models
# note: assumes that a tmp/ directory exists relative to the execution path
serializedEntityExtractorPath = /scr/mihais/code/javanlp/tmp_maxrecall/nfl_entity_model.ser
serializedRelationExtractorPath = /scr/mihais/code/javanlp/tmp_maxrecall/nfl_relation_model.ser

entityResultsPrinters = edu.stanford.nlp.ie.machinereading.domains.nfl.NFLMaxRecallEntityExtractorResultsPrinter
relationResultsPrinters = edu.stanford.nlp.ie.machinereading.RelationExtractorResultsPrinter

# The set chosen by feature selection using RothCONLL04
relationFeatures = arg_words,arg_type,dependency_path_lowlevel,dependency_path_words,surface_path_POS,entities_between_args,full_tree_path
# The above features plus the features used in Bjorne BioNLP09
# relationFeatures = arg_words,arg_type,dependency_path_lowlevel,dependency_path_words,surface_path_POS,entities_between_args,full_tree_path,dependency_path_POS_unigrams,dependency_path_word_n_grams,dependency_path_POS_n_grams,dependency_path_edge_lowlevel_n_grams,dependency_path_edge-node-edge-grams_lowlevel,dependency_path_node-edge-node-grams_lowlevel,dependency_path_directed_bigrams,dependency_path_edge_unigrams,same_head,entity_counts

# uncomment to train a new model even if serializedModelPath exists
# forceRetraining = true

consistencyCheck = edu.stanford.nlp.ie.machinereading.domains.nfl.ConsistencyChecker

extractEntities = true
extractRelations = false
extractEvents = false

trainRelationsUsingPredictedEntities = false
testRelationsUsingPredictedEntities = true

